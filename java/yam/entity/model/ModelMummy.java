// Date: 21/10/2014 21:37:19
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package yam.entity.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelMummy extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer bandageL1;
    ModelRenderer bandageL2;
    ModelRenderer bandageL3;
    ModelRenderer bandageL4;
    ModelRenderer bandageR1;
    ModelRenderer bandageR3;
    ModelRenderer bandageR2;
    ModelRenderer bandageR4;
  
  public ModelMummy()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-4F, -8F, -4F, 8, 8, 8);
      head.setRotationPoint(0F, 0F, 0F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 16, 16);
      body.addBox(-4F, 0F, -2F, 8, 12, 4);
      body.setRotationPoint(0F, 0F, 0F);
      body.setTextureSize(64, 32);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 40, 16);
      rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
      rightarm.setRotationPoint(-5F, 2F, 0F);
      rightarm.setTextureSize(64, 32);
      rightarm.mirror = true;
      setRotation(rightarm, -1.570796F, 0F, 0F);
      leftarm = new ModelRenderer(this, 40, 16);
      leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftarm.setRotationPoint(5F, 2F, 0F);
      leftarm.setTextureSize(64, 32);
      leftarm.mirror = true;
      setRotation(leftarm, -1.570796F, 0F, 0F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      rightleg.setRotationPoint(-2F, 12F, 0F);
      rightleg.setTextureSize(64, 32);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      leftleg.setRotationPoint(2F, 12F, 0F);
      leftleg.setTextureSize(64, 32);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      bandageL1 = new ModelRenderer(this, 32, 0);
      bandageL1.addBox(2F, 2F, -10F, 1, 2, 1);
      bandageL1.setRotationPoint(5F, 2F, 0F);
      bandageL1.setTextureSize(64, 32);
      bandageL1.mirror = true;
      setRotation(bandageL1, 0F, 0F, 0F);
      bandageL2 = new ModelRenderer(this, 36, 0);
      bandageL2.addBox(0F, 2F, -7F, 1, 1, 1);
      bandageL2.setRotationPoint(5F, 2F, 0F);
      bandageL2.setTextureSize(64, 32);
      bandageL2.mirror = true;
      setRotation(bandageL2, 0F, 0F, 0F);
      bandageL3 = new ModelRenderer(this, 32, 4);
      bandageL3.addBox(-1F, 2F, -9F, 1, 3, 1);
      bandageL3.setRotationPoint(5F, 2F, 0F);
      bandageL3.setTextureSize(64, 32);
      bandageL3.mirror = true;
      setRotation(bandageL3, 0F, 0F, 0F);
      bandageL4 = new ModelRenderer(this, 36, 4);
      bandageL4.addBox(1F, 2F, -6F, 1, 4, 1);
      bandageL4.setRotationPoint(5F, 2F, 0F);
      bandageL4.setTextureSize(64, 32);
      bandageL4.mirror = true;
      setRotation(bandageL4, 0F, 0F, 0F);
      bandageR1 = new ModelRenderer(this, 36, 4);
      bandageR1.addBox(-3F, 2F, -10F, 1, 2, 1);
      bandageR1.setRotationPoint(-5F, 2F, 0F);
      bandageR1.setTextureSize(64, 32);
      bandageR1.mirror = true;
      setRotation(bandageR1, 0F, 0F, 0F);
      bandageR3 = new ModelRenderer(this, 32, 4);
      bandageR3.addBox(-1F, 2F, -9F, 1, 3, 1);
      bandageR3.setRotationPoint(-5F, 2F, 0F);
      bandageR3.setTextureSize(64, 32);
      bandageR3.mirror = true;
      setRotation(bandageR3, 0F, 0F, 0F);
      bandageR2 = new ModelRenderer(this, 36, 0);
      bandageR2.addBox(0F, 2F, -7F, 1, 1, 1);
      bandageR2.setRotationPoint(-5F, 2F, 0F);
      bandageR2.setTextureSize(64, 32);
      bandageR2.mirror = true;
      setRotation(bandageR2, 0F, 0F, 0F);
      bandageR4 = new ModelRenderer(this, 32, 0);
      bandageR4.addBox(-2F, 2F, -6F, 1, 4, 1);
      bandageR4.setRotationPoint(-5F, 2F, 0F);
      bandageR4.setTextureSize(64, 32);
      bandageR4.mirror = true;
      setRotation(bandageR4, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head.render(f5);
    body.render(f5);
    rightarm.render(f5);
    leftarm.render(f5);
    rightleg.render(f5);
    leftleg.render(f5);
    bandageL1.render(f5);
    bandageL2.render(f5);
    bandageL3.render(f5);
    bandageL4.render(f5);
    bandageR1.render(f5);
    bandageR3.render(f5);
    bandageR2.render(f5);
    bandageR4.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  private void leftArm(ModelRenderer m, float f, float f1, float f2, float f3) {
	  m.rotateAngleZ = 0.0f;
      m.rotateAngleY = 0.1F - f2 * 0.6F;
      m.rotateAngleX = -((float)Math.PI / 2F) + f;
      m.rotateAngleX -= f2 * 1.2F - f3 * 0.4F;
      m.rotateAngleZ -= MathHelper.cos(f1 * 0.09F) * 0.05F + 0.05F;
      m.rotateAngleX -= MathHelper.sin(f1 * 0.067F) * 0.05F;
  }
  
  private void rightArm(ModelRenderer m, float f, float f1, float f2, float f3) {
      m.rotateAngleZ = 0.0f;
      m.rotateAngleY = -(0.1F - f2 * 0.6F);
      m.rotateAngleX = -((float)Math.PI / 2F) + f;
      m.rotateAngleX -= f2 * 1.2F - f3 * 0.4F;
      m.rotateAngleZ += MathHelper.cos(f1 * 0.09F) * 0.05F + 0.05F;
      m.rotateAngleX += MathHelper.sin(f1 * 0.067F) * 0.05F;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e)
  {
      float f6 = MathHelper.sin(this.onGround * (float)Math.PI);
      float f7 = MathHelper.sin((1.0F - (1.0F - this.onGround) * (1.0F - this.onGround)) * (float)Math.PI);
      this.head.rotateAngleY = f3 / (180F / (float)Math.PI);
      this.head.rotateAngleX = f4 / (180F / (float)Math.PI);
      this.leftArm(this.leftarm, 0F, f2, f6, f7);
      this.rightArm(this.rightarm, 0F, f2, f6, f7);
      float f8 = (float)Math.PI/2;
      this.leftArm(this.bandageL1, f8, f2, f6, f7);
      this.leftArm(this.bandageL2, f8, f2, f6, f7);
      this.leftArm(this.bandageL3, f8, f2, f6, f7);
      this.leftArm(this.bandageL4, f8, f2, f6, f7);
      this.rightArm(this.bandageR1, f8, f2, f6, f7);
      this.rightArm(this.bandageR2, f8, f2, f6, f7);
      this.rightArm(this.bandageR3, f8, f2, f6, f7);
      this.rightArm(this.bandageR4, f8, f2, f6, f7);
      this.leftleg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
      this.rightleg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      this.leftleg.rotateAngleY = 0.0F;
      this.rightleg.rotateAngleY = 0.0F;
  }

}
