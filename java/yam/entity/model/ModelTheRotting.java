// Date: 20/12/2015 11:08:08 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package yam.entity.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelTheRotting extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer body1;
    ModelRenderer body2;
    ModelRenderer body3;
    ModelRenderer body4;
    ModelRenderer blood1;
    ModelRenderer blood2;
    ModelRenderer blood3;
    ModelRenderer blood4;
    ModelRenderer blood5;
    ModelRenderer blood6;
    ModelRenderer blood7;
    ModelRenderer blood8;
    ModelRenderer blood9;
    ModelRenderer blood10;
    ModelRenderer blood11;
    ModelRenderer bloodbase;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
  
  public ModelTheRotting()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-4F, -8F, -4F, 8, 8, 8);
      head.setRotationPoint(-4.4F, 21F, -5.2F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, -1.506243F, -2.840344F, 0.0606062F);
      rightarm = new ModelRenderer(this, 0, 16);
      rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
      rightarm.setRotationPoint(-8.4F, 22.73333F, -6.066667F);
      rightarm.setTextureSize(64, 32);
      rightarm.mirror = true;
      setRotation(rightarm, 2.518469F, -0.3346075F, -0.1115358F);
      leftarm = new ModelRenderer(this, 0, 16);
      leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftarm.setRotationPoint(-0.4F, 22.16667F, -6.666667F);
      leftarm.setTextureSize(64, 32);
      leftarm.mirror = true;
      setRotation(leftarm, 1.549788F, 0.6007147F, 1.851037F);
      body1 = new ModelRenderer(this, 35, 0);
      body1.addBox(-4F, 0F, 0F, 8, 4, 5);
      body1.setRotationPoint(-5.4F, 20F, -7.066667F);
      body1.setTextureSize(64, 32);
      body1.mirror = true;
      setRotation(body1, 0F, 0.3442841F, 0F);
      body2 = new ModelRenderer(this, 32, 0);
      body2.addBox(-4F, 0F, 0F, 8, 4, 5);
      body2.setRotationPoint(-1.3F, 20F, 4.4F);
      body2.setTextureSize(64, 32);
      body2.mirror = true;
      setRotation(body2, 0F, 0.3442841F, 0F);
      body3 = new ModelRenderer(this, 32, 0);
      body3.addBox(-4F, 0F, 0F, 2, 4, 8);
      body3.setRotationPoint(-3.8F, 20.01F, -2.6F);
      body3.setTextureSize(64, 32);
      body3.mirror = true;
      setRotation(body3, 0F, 0.3442841F, 0F);
      body4 = new ModelRenderer(this, 32, 0);
      body4.addBox(-4F, 0F, 0F, 2, 4, 9);
      body4.setRotationPoint(1.533333F, 20.01F, -5.6F);
      body4.setTextureSize(64, 32);
      body4.mirror = true;
      setRotation(body4, 0F, 0.3442841F, 0F);
      blood1 = new ModelRenderer(this, 40, 16);
      blood1.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood1.setRotationPoint(0.4666667F, 20.6F, 1.666667F);
      blood1.setTextureSize(64, 32);
      blood1.mirror = true;
      setRotation(blood1, 0.1721421F, 0.3012486F, 0.2151776F);
      blood2 = new ModelRenderer(this, 32, 16);
      blood2.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood2.setRotationPoint(0F, 20.6F, 0F);
      blood2.setTextureSize(64, 32);
      blood2.mirror = true;
      setRotation(blood2, 0F, 0F, 0F);
      blood3 = new ModelRenderer(this, 32, 16);
      blood3.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood3.setRotationPoint(0.4666667F, 20.6F, 3.733333F);
      blood3.setTextureSize(64, 32);
      blood3.mirror = true;
      setRotation(blood3, 0.2582131F, 0.3012486F, 0.1291065F);
      blood4 = new ModelRenderer(this, 48, 16);
      blood4.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood4.setRotationPoint(-1.066667F, 20.6F, 4.933333F);
      blood4.setTextureSize(64, 32);
      blood4.mirror = true;
      setRotation(blood4, 0.0430355F, -0.4303552F, -0.2582131F);
      blood5 = new ModelRenderer(this, 32, 16);
      blood5.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood5.setRotationPoint(-2.933333F, 20.6F, 4.933333F);
      blood5.setTextureSize(64, 32);
      blood5.mirror = true;
      setRotation(blood5, 0.3442841F, 0.8607103F, 0.1291065F);
      blood6 = new ModelRenderer(this, 40, 16);
      blood6.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood6.setRotationPoint(-4.466667F, 20.6F, 3.533333F);
      blood6.setTextureSize(64, 32);
      blood6.mirror = true;
      setRotation(blood6, 0.086071F, 0.3012486F, -0.1291065F);
      blood7 = new ModelRenderer(this, 48, 16);
      blood7.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood7.setRotationPoint(-5F, 20.6F, 1.6F);
      blood7.setTextureSize(64, 32);
      blood7.mirror = true;
      setRotation(blood7, 0.2151776F, -0.0430355F, -0.2151776F);
      blood8 = new ModelRenderer(this, 40, 16);
      blood8.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood8.setRotationPoint(-5.466667F, 20.6F, -0.3333333F);
      blood8.setTextureSize(64, 32);
      blood8.mirror = true;
      setRotation(blood8, 0.3012486F, 0.3873196F, 0.0430355F);
      blood9 = new ModelRenderer(this, 32, 16);
      blood9.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood9.setRotationPoint(-4.533333F, 20.6F, -1.733333F);
      blood9.setTextureSize(64, 32);
      blood9.mirror = true;
      setRotation(blood9, 0.0430355F, 0.3873196F, 0.2582131F);
      blood10 = new ModelRenderer(this, 40, 16);
      blood10.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood10.setRotationPoint(-2.533333F, 20.5F, -1.733333F);
      blood10.setTextureSize(64, 32);
      blood10.mirror = true;
      setRotation(blood10, 0.1721421F, 0.6455327F, 0.2582131F);
      blood11 = new ModelRenderer(this, 48, 16);
      blood11.addBox(-1F, -1F, -1F, 2, 2, 2);
      blood11.setRotationPoint(-0.7333333F, 20.5F, -1.733333F);
      blood11.setTextureSize(64, 32);
      blood11.mirror = true;
      setRotation(blood11, 0.1721421F, 0.6455327F, 0.2582131F);
      bloodbase = new ModelRenderer(this, 32, 16);
      bloodbase.addBox(-3F, 0F, 0F, 6, 2, 8);
      bloodbase.setRotationPoint(-3.8F, 21F, -2.6F);
      bloodbase.setTextureSize(64, 32);
      bloodbase.mirror = true;
      setRotation(bloodbase, 0F, 0.3442841F, 0F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-1F, -2F, -2F, 4, 12, 4);
      rightleg.setRotationPoint(-3.133333F, 21.5F, 9F);
      rightleg.setTextureSize(64, 32);
      rightleg.mirror = true;
      setRotation(rightleg, -0.77413F, 1.461425F, 1.463717F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftleg.setRotationPoint(3.133333F, 20.86667F, 7.4F);
      leftleg.setTextureSize(64, 32);
      leftleg.mirror = true;
      setRotation(leftleg, 0.4739F, 1.203212F, 2.96996F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head.render(f5);
    rightarm.render(f5);
    leftarm.render(f5);
    body1.render(f5);
    body2.render(f5);
    body3.render(f5);
    body4.render(f5);
    blood1.render(f5);
    blood2.render(f5);
    blood3.render(f5);
    blood4.render(f5);
    blood5.render(f5);
    blood6.render(f5);
    blood7.render(f5);
    blood8.render(f5);
    blood9.render(f5);
    blood10.render(f5);
    blood11.render(f5);
    bloodbase.render(f5);
    rightleg.render(f5);
    leftleg.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
    leftleg.rotateAngleX = (float)(167 / Math.PI);
    if ((f2 % 400 < 20) || (f2 % 300 < 12)) {
    	leftleg.rotateAngleZ = MathHelper.sin(f2 * 4F) * 0.1F;
    }
    rightleg.setRotationPoint(-3.133333F, 21.5F, 9.6F);
    leftarm.rotateAngleX = (float)(167 / Math.PI);
    leftarm.rotateAngleY = (float)(167 / Math.PI);
    rightarm.rotateAngleX = (float)((MathHelper.sin(f2 * 0.1F) * 0.2F) + (Math.PI * 0.8));
  }

}
