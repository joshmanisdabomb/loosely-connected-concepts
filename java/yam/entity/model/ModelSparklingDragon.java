// Date: 08/03/2015 02:56:26
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package yam.entity.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import yam.entity.EntitySparklingDragon;

public class ModelSparklingDragon extends ModelBase
{
  //fields
    ModelRenderer body;
    ModelRenderer leg1;
    ModelRenderer thigh1;
    ModelRenderer leg2;
    ModelRenderer thigh2;
    ModelRenderer leg3;
    ModelRenderer thigh3;
    ModelRenderer leg4;
    ModelRenderer thigh4;
    ModelRenderer neck1;
    ModelRenderer neck2;
    ModelRenderer head;
    ModelRenderer jaw;
    ModelRenderer scales;
    ModelRenderer horn1;
    ModelRenderer horn2;
    ModelRenderer tail1;
    ModelRenderer tail2;
    ModelRenderer tail3;
    ModelRenderer scale1;
    ModelRenderer scale2;
    ModelRenderer scale3;
  
  public ModelSparklingDragon()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      body = new ModelRenderer(this, 0, 0);
      body.addBox(-4F, -4F, -8F, 8, 8, 16);
      body.setRotationPoint(0F, 14F, 3F);
      body.setTextureSize(128, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      leg1 = new ModelRenderer(this, 0, 31);
      leg1.addBox(-1F, -1F, -1F, 2, 8, 2);
      leg1.setRotationPoint(-5F, 17F, -2F);
      leg1.setTextureSize(128, 128);
      leg1.mirror = true;
      setRotation(leg1, 0F, 0F, 0F);
      thigh1 = new ModelRenderer(this, 0, 24);
      thigh1.addBox(-1.5F, -1F, -1.5F, 3, 4, 3);
      thigh1.setRotationPoint(-5F, 16F, -2F);
      thigh1.setTextureSize(128, 128);
      thigh1.mirror = true;
      setRotation(thigh1, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 0, 31);
      leg2.addBox(-1F, -1F, -1F, 2, 8, 2);
      leg2.setRotationPoint(5F, 17F, -2F);
      leg2.setTextureSize(128, 128);
      leg2.mirror = true;
      setRotation(leg2, 0F, 0F, 0F);
      thigh2 = new ModelRenderer(this, 0, 24);
      thigh2.addBox(-1.5F, -1F, -1.5F, 3, 4, 3);
      thigh2.setRotationPoint(5F, 16F, 8F);
      thigh2.setTextureSize(128, 128);
      thigh2.mirror = true;
      setRotation(thigh2, 0F, 0F, 0F);
      leg3 = new ModelRenderer(this, 0, 31);
      leg3.addBox(-1F, -1F, -1F, 2, 8, 2);
      leg3.setRotationPoint(-5F, 17F, 8F);
      leg3.setTextureSize(128, 128);
      leg3.mirror = true;
      setRotation(leg3, 0F, 0F, 0F);
      thigh3 = new ModelRenderer(this, 0, 24);
      thigh3.addBox(-1.5F, -1F, -1.5F, 3, 4, 3);
      thigh3.setRotationPoint(-5F, 16F, 8F);
      thigh3.setTextureSize(128, 128);
      thigh3.mirror = true;
      setRotation(thigh3, 0F, 0F, 0F);
      leg4 = new ModelRenderer(this, 0, 31);
      leg4.addBox(-1F, -1F, -1F, 2, 8, 2);
      leg4.setRotationPoint(5F, 17F, 8F);
      leg4.setTextureSize(128, 128);
      leg4.mirror = true;
      setRotation(leg4, 0F, 0F, 0F);
      thigh4 = new ModelRenderer(this, 0, 24);
      thigh4.addBox(-1.5F, -1F, -1.5F, 3, 4, 3);
      thigh4.setRotationPoint(5F, 16F, -2F);
      thigh4.setTextureSize(128, 128);
      thigh4.mirror = true;
      setRotation(thigh4, 0F, 0F, 0F);
      neck1 = new ModelRenderer(this, 64, 0);
      neck1.addBox(-3F, -3F, -6F, 6, 6, 6);
      neck1.setRotationPoint(0F, 13F, -1F);
      neck1.setTextureSize(128, 128);
      neck1.mirror = true;
      setRotation(neck1, -0.1745329F, 0F, 0F);
      neck2 = new ModelRenderer(this, 88, 0);
      neck2.addBox(-2.5F, -2.5F, -10F, 5, 5, 5);
      neck2.setRotationPoint(0F, 13F, -1F);
      neck2.setTextureSize(128, 128);
      neck2.mirror = true;
      setRotation(neck2, -0.3490659F, 0F, 0F);
      scales = new ModelRenderer(this, 0, 64);
      scales.addBox(-0.5F, -3F, -11F, 1, 3, 10);
      scales.setRotationPoint(0F, 13F, -1F);
      scales.setTextureSize(128, 128);
      scales.mirror = true;
      setRotation(scales, -0.5205006F, 0F, 0F);
      horn1 = new ModelRenderer(this, 0, 51);
      horn1.addBox(-3F, -8F, -12F, 1, 3, 1);
      horn1.setRotationPoint(0F, 13F, -1F);
      horn1.setTextureSize(128, 128);
      horn1.mirror = true;
      setRotation(horn1, 0F, 0F, 0F);
      horn2 = new ModelRenderer(this, 0, 51);
      horn2.addBox(2F, -8F, -12F, 1, 3, 1);
      horn2.setRotationPoint(0F, 13F, -1F);
      horn2.setTextureSize(128, 128);
      horn2.mirror = true;
      setRotation(horn2, 0F, 0F, 0F);
      
      head = new ModelRenderer(this, 64, 12);
      head.addBox(-2F, 3F, -16F, 4, 4, 8);
      head.setRotationPoint(0F, 4F, 0F);
      head.setTextureSize(128, 128);
      head.mirror = true;
      setRotation(head, 0.3490659F, 0F, 0F);
      jaw = new ModelRenderer(this, 64, 24);
      jaw.addBox(-1.5F, 11F, -16F, 3, 1, 8);
      jaw.setRotationPoint(0F, 0F, 0F);
      jaw.setTextureSize(128, 128);
      jaw.mirror = true;
      setRotation(jaw, 0F, 0F, 0F);
      
      tail1 = new ModelRenderer(this, 0, 41);
      tail1.addBox(-2F, -2F, 0F, 4, 4, 6);
      tail1.setRotationPoint(0F, 11.5F, 10F);
      tail1.setTextureSize(128, 128);
      tail1.mirror = true;
      setRotation(tail1, 0.1745329F, 0F, 0F);
      tail2 = new ModelRenderer(this, 20, 41);
      tail2.addBox(-1.5F, -2F, 5F, 3, 3, 5);
      tail2.setRotationPoint(0F, 11.5F, 10F);
      tail2.setTextureSize(128, 128);
      tail2.mirror = true;
      setRotation(tail2, 0.3490659F, 0F, 0F);
      tail3 = new ModelRenderer(this, 36, 41);
      tail3.addBox(-1F, -1F, 9F, 2, 2, 3);
      tail3.setRotationPoint(0F, 11.5F, 10F);
      tail3.setTextureSize(128, 128);
      tail3.mirror = true;
      setRotation(tail3, 0.5235988F, 0F, 0F);
      scale1 = new ModelRenderer(this, 0, 64);
      scale1.addBox(-0.5F, -2F, -1F, 1, 2, 2);
      scale1.setRotationPoint(0F, 10F, 2F);
      scale1.setTextureSize(128, 128);
      scale1.mirror = true;
      setRotation(scale1, 0F, 0F, 0F);
      scale2 = new ModelRenderer(this, 0, 64);
      scale2.addBox(-0.5F, -1.5F, -1F, 1, 2, 2);
      scale2.setRotationPoint(0F, 10F, 5F);
      scale2.setTextureSize(128, 128);
      scale2.mirror = true;
      setRotation(scale2, 0F, 0F, 0F);
      scale3 = new ModelRenderer(this, 0, 64);
      scale3.addBox(-0.5F, -1F, 0F, 1, 1, 2);
      scale3.setRotationPoint(0F, 10F, 7F);
      scale3.setTextureSize(128, 128);
      scale3.mirror = true;
      setRotation(scale3, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    body.render(f5);
    leg1.render(f5);
    thigh1.render(f5);
    leg2.render(f5);
    thigh2.render(f5);
    leg3.render(f5);
    thigh3.render(f5);
    leg4.render(f5);
    thigh4.render(f5);
    neck1.render(f5);
    neck2.render(f5);
    head.render(f5);
    jaw.render(f5);
    scales.render(f5);
    horn1.render(f5);
    horn2.render(f5);
    tail1.render(f5);
    tail2.render(f5);
    tail3.render(f5);
    //tail4.render(f5);
    scale1.render(f5);
    scale2.render(f5);
    scale3.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e)
    {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
		
		this.head.rotateAngleY = f3 / (180F / (float)Math.PI);
		this.jaw.rotateAngleY = f3 / (180F / (float)Math.PI);
		this.horn1.rotateAngleY = f3 / (180F / (float)Math.PI);
		this.horn2.rotateAngleY = f3 / (180F / (float)Math.PI);
		this.scales.rotateAngleY = f3 / (180F / (float)Math.PI) / 1.15F;
		this.neck2.rotateAngleY = f3 / (180F / (float)Math.PI) / 1.15F;
		this.neck1.rotateAngleY = f3 / (180F / (float)Math.PI) / 1.3F;

		this.head.rotateAngleX = e.getDataWatcher().getWatchableObjectFloat(16) * -0.3F;
		this.horn1.rotateAngleX = e.getDataWatcher().getWatchableObjectFloat(16) * -0.3F;
		this.horn2.rotateAngleX = e.getDataWatcher().getWatchableObjectFloat(16) * -0.3F;
		this.jaw.rotateAngleX = e.getDataWatcher().getWatchableObjectFloat(16) * 0.3F;
		
        this.leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.leg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI/1.7F) * 1.4F * f1;
        this.leg3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI/1.7F) * 1.4F * f1;
        this.leg4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.thigh1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.thigh2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI/1.7F) * 1.4F * f1;
        this.thigh3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI/1.7F) * 1.4F * f1;
        this.thigh4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        
        this.tail1.rotateAngleX = (float)(MathHelper.sin(f2/5F) / (Math.PI * 2D));
        this.tail2.rotateAngleX = (float)(MathHelper.sin(f2/5F) / (Math.PI * 2D)) * 2F;
        this.tail3.rotateAngleX = (float)(MathHelper.sin(f2/5F) / (Math.PI * 2D)) * 3F;
	}

}
